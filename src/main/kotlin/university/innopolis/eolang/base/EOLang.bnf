{
  parserClass="university.innopolis.eolang.parser.EOParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="EO"
  psiImplClassSuffix="Impl"
  psiPackage="university.innopolis.eolang.base.psi"
  psiImplPackage="university.innopolis.eolang.base.psi.impl"

  elementTypeHolderClass="university.innopolis.eolang.base.psi.EOTypes"
  elementTypeClass="university.innopolis.eolang.base.psi.EOElementType"
  tokenTypeClass="university.innopolis.eolang.base.psi.EOTokenType"
}

program ::= [license] [metas] objects
license ::= [{comment eol}]
metas ::= [{plus name [metaname] eol}]
objects ::= [{comment eol}] object [{eol object}]
object ::= anonymous
           | (abstraction | application) [eol tail] [{method  [htail] [suffix] [tail]}]
anonymous ::= attributes htail
abstraction ::= [{comment eol}] attributes [suffix [slash name]]
attributes ::= LSQ [attribute [{attribute}]] RSQ
attribute ::= label
label ::=  at|name [dots]
tail ::=  TAB {object} UNTAB
suffix ::= arrow label [const]
method ::= dot(name|parent)
application ::= head [htail] [method [htail] | has [htail] | suffix [htail]]
                | LB application RB [htail]
htail ::= {head
          |application method
          |LB application RB
          |application has
          |application suffix
          |anonymous}
head ::=  at
           |parent
           |self
           |star
           |name
           |name dot
           |data
has ::= colon name
data ::= bytes
           |bool
           |string
           |int
           |float
           |hex
           |char
           |regex
bytes ::= byte [{minus byte}]